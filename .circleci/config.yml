version: 2
jobs:
  build:
    docker:
      - image: ubuntu:16.04
    working_directory: ~/repo
    environment:
      - NG2ENV : "Prod"
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install curl and apt-transport-https
          command: |
            apt update
            apt install -y curl apt-transport-https
      # use a primary image that already has Docker (recommended)
      # or install it during a build like we do here
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Install NodeJS v8
          command: |
            curl -sL https://deb.nodesource.com/setup_8.x | bash -
            apt update
            apt install -y nodejs
      - run:
          name: Build and bundle from source
          command: |
            if [[ `npm -v` != 6* ]]; then npm i -g npm@6; fi
            npm i
            npm run build
      - run:
          name: Build and push Docker image
          command: |
            TAG=$CIRCLE_BUILD_NUM
            docker build -f Dockerfile -t leduong/reactdds:v$TAG .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push leduong/reactdds:v$TAG
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
